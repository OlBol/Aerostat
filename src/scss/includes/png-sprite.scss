/*
SCSS variables are information about icon's compiled state, stored under its original file name

.icon-home {
  width: $icon-home-width;
}

The large array-like variables contain all information about a single icon
$icon-home: x y offset_x offset_y width height total_width total_height image_path;

At the bottom of this section, we provide information about the spritesheet itself
$spritesheet: width height image $spritesheet-sprites;
*/
$arrow-name: 'arrow';
$arrow-x: 137px;
$arrow-y: 120px;
$arrow-offset-x: -137px;
$arrow-offset-y: -120px;
$arrow-width: 10px;
$arrow-height: 9px;
$arrow-total-width: 178px;
$arrow-total-height: 136px;
$arrow-image: 'png-sprite.png';
$arrow: (137px, 120px, -137px, -120px, 10px, 9px, 178px, 136px, 'png-sprite.png', 'arrow', );
$ball-name: 'ball';
$ball-x: 65px;
$ball-y: 34px;
$ball-offset-x: -65px;
$ball-offset-y: -34px;
$ball-width: 37px;
$ball-height: 54px;
$ball-total-width: 178px;
$ball-total-height: 136px;
$ball-image: 'png-sprite.png';
$ball: (65px, 34px, -65px, -34px, 37px, 54px, 178px, 136px, 'png-sprite.png', 'ball', );
$binoculars-name: 'binoculars';
$binoculars-x: 65px;
$binoculars-y: 0px;
$binoculars-offset-x: -65px;
$binoculars-offset-y: 0px;
$binoculars-width: 72px;
$binoculars-height: 34px;
$binoculars-total-width: 178px;
$binoculars-total-height: 136px;
$binoculars-image: 'png-sprite.png';
$binoculars: (65px, 0px, -65px, 0px, 72px, 34px, 178px, 136px, 'png-sprite.png', 'binoculars', );
$camera-name: 'camera';
$camera-x: 0px;
$camera-y: 0px;
$camera-offset-x: 0px;
$camera-offset-y: 0px;
$camera-width: 65px;
$camera-height: 50px;
$camera-total-width: 178px;
$camera-total-height: 136px;
$camera-image: 'png-sprite.png';
$camera: (0px, 0px, 0px, 0px, 65px, 50px, 178px, 136px, 'png-sprite.png', 'camera', );
$email-name: 'email';
$email-x: 65px;
$email-y: 88px;
$email-offset-x: -65px;
$email-offset-y: -88px;
$email-width: 23px;
$email-height: 17px;
$email-total-width: 178px;
$email-total-height: 136px;
$email-image: 'png-sprite.png';
$email: (65px, 88px, -65px, -88px, 23px, 17px, 178px, 136px, 'png-sprite.png', 'email', );
$facebook-name: 'facebook';
$facebook-x: 75px;
$facebook-y: 108px;
$facebook-offset-x: -75px;
$facebook-offset-y: -108px;
$facebook-width: 22px;
$facebook-height: 23px;
$facebook-total-width: 178px;
$facebook-total-height: 136px;
$facebook-image: 'png-sprite.png';
$facebook: (75px, 108px, -75px, -108px, 22px, 23px, 178px, 136px, 'png-sprite.png', 'facebook', );
$finger-name: 'finger';
$finger-x: 0px;
$finger-y: 50px;
$finger-offset-x: 0px;
$finger-offset-y: -50px;
$finger-width: 56px;
$finger-height: 58px;
$finger-total-width: 178px;
$finger-total-height: 136px;
$finger-image: 'png-sprite.png';
$finger: (0px, 50px, 0px, -50px, 56px, 58px, 178px, 136px, 'png-sprite.png', 'finger', );
$glasses-name: 'glasses';
$glasses-x: 0px;
$glasses-y: 108px;
$glasses-offset-x: 0px;
$glasses-offset-y: -108px;
$glasses-width: 75px;
$glasses-height: 28px;
$glasses-total-width: 178px;
$glasses-total-height: 136px;
$glasses-image: 'png-sprite.png';
$glasses: (0px, 108px, 0px, -108px, 75px, 28px, 178px, 136px, 'png-sprite.png', 'glasses', );
$instagram-name: 'instagram';
$instagram-x: 137px;
$instagram-y: 74px;
$instagram-offset-x: -137px;
$instagram-offset-y: -74px;
$instagram-width: 22px;
$instagram-height: 23px;
$instagram-total-width: 178px;
$instagram-total-height: 136px;
$instagram-image: 'png-sprite.png';
$instagram: (137px, 74px, -137px, -74px, 22px, 23px, 178px, 136px, 'png-sprite.png', 'instagram', );
$location-name: 'location';
$location-x: 102px;
$location-y: 34px;
$location-offset-x: -102px;
$location-offset-y: -34px;
$location-width: 35px;
$location-height: 50px;
$location-total-width: 178px;
$location-total-height: 136px;
$location-image: 'png-sprite.png';
$location: (102px, 34px, -102px, -34px, 35px, 50px, 178px, 136px, 'png-sprite.png', 'location', );
$man-name: 'man';
$man-x: 159px;
$man-y: 97px;
$man-offset-x: -159px;
$man-offset-y: -97px;
$man-width: 15px;
$man-height: 15px;
$man-total-width: 178px;
$man-total-height: 136px;
$man-image: 'png-sprite.png';
$man: (159px, 97px, -159px, -97px, 15px, 15px, 178px, 136px, 'png-sprite.png', 'man', );
$plane-name: 'plane';
$plane-x: 137px;
$plane-y: 0px;
$plane-offset-x: -137px;
$plane-offset-y: 0px;
$plane-width: 41px;
$plane-height: 40px;
$plane-total-width: 178px;
$plane-total-height: 136px;
$plane-image: 'png-sprite.png';
$plane: (137px, 0px, -137px, 0px, 41px, 40px, 178px, 136px, 'png-sprite.png', 'plane', );
$pointer-name: 'pointer';
$pointer-x: 157px;
$pointer-y: 40px;
$pointer-offset-x: -157px;
$pointer-offset-y: -40px;
$pointer-width: 18px;
$pointer-height: 29px;
$pointer-total-width: 178px;
$pointer-total-height: 136px;
$pointer-image: 'png-sprite.png';
$pointer: (157px, 40px, -157px, -40px, 18px, 29px, 178px, 136px, 'png-sprite.png', 'pointer', );
$slider-arrow-name: 'slider-arrow';
$slider-arrow-x: 137px;
$slider-arrow-y: 40px;
$slider-arrow-offset-x: -137px;
$slider-arrow-offset-y: -40px;
$slider-arrow-width: 20px;
$slider-arrow-height: 34px;
$slider-arrow-total-width: 178px;
$slider-arrow-total-height: 136px;
$slider-arrow-image: 'png-sprite.png';
$slider-arrow: (137px, 40px, -137px, -40px, 20px, 34px, 178px, 136px, 'png-sprite.png', 'slider-arrow', );
$tel-name: 'tel';
$tel-x: 159px;
$tel-y: 74px;
$tel-offset-x: -159px;
$tel-offset-y: -74px;
$tel-width: 19px;
$tel-height: 19px;
$tel-total-width: 178px;
$tel-total-height: 136px;
$tel-image: 'png-sprite.png';
$tel: (159px, 74px, -159px, -74px, 19px, 19px, 178px, 136px, 'png-sprite.png', 'tel', );
$vk-name: 'vk';
$vk-x: 137px;
$vk-y: 97px;
$vk-offset-x: -137px;
$vk-offset-y: -97px;
$vk-width: 22px;
$vk-height: 23px;
$vk-total-width: 178px;
$vk-total-height: 136px;
$vk-image: 'png-sprite.png';
$vk: (137px, 97px, -137px, -97px, 22px, 23px, 178px, 136px, 'png-sprite.png', 'vk', );
$spritesheet-width: 178px;
$spritesheet-height: 136px;
$spritesheet-image: 'png-sprite.png';
$spritesheet-sprites: ($arrow, $ball, $binoculars, $camera, $email, $facebook, $finger, $glasses, $instagram, $location, $man, $plane, $pointer, $slider-arrow, $tel, $vk, );
$spritesheet: (178px, 136px, 'png-sprite.png', $spritesheet-sprites, );

/*
The provided mixins are intended to be used with the array-like variables

.icon-home {
  @include sprite-width($icon-home);
}

.icon-email {
  @include sprite($icon-email);
}

Example usage in HTML:

`display: block` sprite:
<div class="icon-home"></div>

To change `display` (e.g. `display: inline-block;`), we suggest using a common CSS class:

// CSS
.icon {
  display: inline-block;
}

// HTML
<i class="icon icon-home"></i>
*/
@mixin sprite-width($sprite) {
  width: nth($sprite, 5);
}

@mixin sprite-height($sprite) {
  height: nth($sprite, 6);
}

@mixin sprite-position($sprite) {
  $sprite-offset-x: nth($sprite, 3);
  $sprite-offset-y: nth($sprite, 4);
  background-position: $sprite-offset-x  $sprite-offset-y;
}

@mixin sprite-image($sprite) {
  $sprite-image: nth($sprite, 9);
  background-image: url(#{$sprite-image});
}

@mixin sprite($sprite) {
  @include sprite-image($sprite);
  @include sprite-position($sprite);
  @include sprite-width($sprite);
  @include sprite-height($sprite);
}

/*
The `sprites` mixin generates identical output to the CSS template
  but can be overridden inside of SCSS

@include sprites($spritesheet-sprites);
*/
@mixin sprites($sprites) {
  @each $sprite in $sprites {
    $sprite-name: nth($sprite, 10);
    .#{$sprite-name} {
      @include sprite($sprite);
    }
  }
}
